/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.cardpay.sdk.model.ChangedPlanData;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * PlanUpdateResponse
 */

public class PlanUpdateResponse {
  @SerializedName("plan_data")
  private ChangedPlanData planData = null;

  public PlanUpdateResponse planData(ChangedPlanData planData) {
    this.planData = planData;
    return this;
  }

   /**
   * Plan data: UpdatedPlanData for plan update, RenamedPlanData for plan renaming.
   * @return planData
  **/
  @ApiModelProperty(value = "Plan data: UpdatedPlanData for plan update, RenamedPlanData for plan renaming.")
  public ChangedPlanData getPlanData() {
    return planData;
  }

  public void setPlanData(ChangedPlanData planData) {
    this.planData = planData;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PlanUpdateResponse planUpdateResponse = (PlanUpdateResponse) o;
    return Objects.equals(this.planData, planUpdateResponse.planData);
  }

  @Override
  public int hashCode() {
    return Objects.hash(planData);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PlanUpdateResponse {\n");
    
    if (planData != null) sb.append("    planData: ").append(toIndentedString(planData)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

