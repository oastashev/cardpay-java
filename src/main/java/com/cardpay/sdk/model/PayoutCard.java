/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * For BANKCARD payment method only
 */
@ApiModel(description = "For BANKCARD payment method only")

public class PayoutCard {
  @SerializedName("expiration")
  private String expiration = null;

  @SerializedName("issuing_country_code")
  private String issuingCountryCode = null;

  @SerializedName("masked_pan")
  private String maskedPan = null;

  @SerializedName("pan")
  private String pan = null;

  public PayoutCard expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Customer&#39;s card expiration date. Format: mm/yyyy
   * @return expiration
  **/
  @ApiModelProperty(example = "11/2022", required = true, value = "Customer's card expiration date. Format: mm/yyyy")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public PayoutCard issuingCountryCode(String issuingCountryCode) {
    this.issuingCountryCode = issuingCountryCode;
    return this;
  }

   /**
   * Country code of issuing card country
   * @return issuingCountryCode
  **/
  @ApiModelProperty(value = "Country code of issuing card country")
  public String getIssuingCountryCode() {
    return issuingCountryCode;
  }

  public void setIssuingCountryCode(String issuingCountryCode) {
    this.issuingCountryCode = issuingCountryCode;
  }

  public PayoutCard maskedPan(String maskedPan) {
    this.maskedPan = maskedPan;
    return this;
  }

   /**
   * Masked PAN (shows first 6 digits and 4 last digits of the PAN)
   * @return maskedPan
  **/
  @ApiModelProperty(value = "Masked PAN (shows first 6 digits and 4 last digits of the PAN)")
  public String getMaskedPan() {
    return maskedPan;
  }

  public void setMaskedPan(String maskedPan) {
    this.maskedPan = maskedPan;
  }

  public PayoutCard pan(String pan) {
    this.pan = pan;
    return this;
  }

   /**
   * Customer&#39;s card number (PAN). Any valid card number, may contain spaces. Required if &#x60;card_account.token&#x60; element isn&#39;t presented
   * @return pan
  **/
  @ApiModelProperty(example = "4000000000000002", required = true, value = "Customer's card number (PAN). Any valid card number, may contain spaces. Required if `card_account.token` element isn't presented")
  public String getPan() {
    return pan;
  }

  public void setPan(String pan) {
    this.pan = pan;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutCard payoutCard = (PayoutCard) o;
    return Objects.equals(this.expiration, payoutCard.expiration) &&
        Objects.equals(this.issuingCountryCode, payoutCard.issuingCountryCode) &&
        Objects.equals(this.maskedPan, payoutCard.maskedPan) &&
        Objects.equals(this.pan, payoutCard.pan);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiration, issuingCountryCode, maskedPan, pan);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutCard {\n");
    
    if (expiration != null) sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    if (issuingCountryCode != null) sb.append("    issuingCountryCode: ").append(toIndentedString(issuingCountryCode)).append("\n");
    if (maskedPan != null) sb.append("    maskedPan: ").append(toIndentedString(maskedPan)).append("\n");
    if (pan != null) sb.append("    pan: ").append(toIndentedString(pan)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

