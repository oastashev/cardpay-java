/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * For NETELLER, WEBMONEY and QIWI payment methods only
 */
@ApiModel(description = "For NETELLER, WEBMONEY and QIWI payment methods only")

public class PayoutEWalletAccount {
  @SerializedName("bank_branch")
  private String bankBranch = null;

  @SerializedName("bank_code")
  private String bankCode = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("name")
  private String name = null;

  @SerializedName("type")
  private String type = null;

  public PayoutEWalletAccount bankBranch(String bankBranch) {
    this.bankBranch = bankBranch;
    return this;
  }

   /**
   * Bank branch number
   * @return bankBranch
  **/
  @ApiModelProperty(example = "7197", value = "Bank branch number")
  public String getBankBranch() {
    return bankBranch;
  }

  public void setBankBranch(String bankBranch) {
    this.bankBranch = bankBranch;
  }

  public PayoutEWalletAccount bankCode(String bankCode) {
    this.bankCode = bankCode;
    return this;
  }

   /**
   * Bank code
   * @return bankCode
  **/
  @ApiModelProperty(example = "057", value = "Bank code")
  public String getBankCode() {
    return bankCode;
  }

  public void setBankCode(String bankCode) {
    this.bankCode = bankCode;
  }

  public PayoutEWalletAccount id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Id. For NETELLER: customer&#39;s email. For WEBMONEY: customer account number. For QIWI: customer&#39;s phone number (from 1 to 15 digits).
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Id. For NETELLER: customer's email. For WEBMONEY: customer account number. For QIWI: customer's phone number (from 1 to 15 digits).")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public PayoutEWalletAccount name(String name) {
    this.name = name;
    return this;
  }

   /**
   * Account name
   * @return name
  **/
  @ApiModelProperty(example = "John Smith", value = "Account name")
  public String getName() {
    return name;
  }

  public void setName(String name) {
    this.name = name;
  }

  public PayoutEWalletAccount type(String type) {
    this.type = type;
    return this;
  }

   /**
   * Customer&#39;s account type
   * @return type
  **/
  @ApiModelProperty(example = "CC", value = "Customer's account type")
  public String getType() {
    return type;
  }

  public void setType(String type) {
    this.type = type;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    PayoutEWalletAccount payoutEWalletAccount = (PayoutEWalletAccount) o;
    return Objects.equals(this.bankBranch, payoutEWalletAccount.bankBranch) &&
        Objects.equals(this.bankCode, payoutEWalletAccount.bankCode) &&
        Objects.equals(this.id, payoutEWalletAccount.id) &&
        Objects.equals(this.name, payoutEWalletAccount.name) &&
        Objects.equals(this.type, payoutEWalletAccount.type);
  }

  @Override
  public int hashCode() {
    return Objects.hash(bankBranch, bankCode, id, name, type);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class PayoutEWalletAccount {\n");
    
    if (bankBranch != null) sb.append("    bankBranch: ").append(toIndentedString(bankBranch)).append("\n");
    if (bankCode != null) sb.append("    bankCode: ").append(toIndentedString(bankCode)).append("\n");
    if (id != null) sb.append("    id: ").append(toIndentedString(id)).append("\n");
    if (name != null) sb.append("    name: ").append(toIndentedString(name)).append("\n");
    if (type != null) sb.append("    type: ").append(toIndentedString(type)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

