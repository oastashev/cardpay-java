/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * RecurringCustomer
 */

public class RecurringCustomer {
  @SerializedName("email")
  private String email = null;

  @SerializedName("id")
  private String id = null;

  /**
   * Preferred locale for the payment page ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code). The default locale will be applied if the selected locale is not supported. Supported locales are: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;, &#x60;ja&#x60;
   */
  @JsonAdapter(LocaleEnum.Adapter.class)
  public enum LocaleEnum {
    RU("ru"),
    
    EN("en"),
    
    ZH("zh"),
    
    JA("ja");

    private String value;

    LocaleEnum(String value) {
      this.value = value;
    }

    public String getValue() {
      return value;
    }

    @Override
    public String toString() {
      return String.valueOf(value);
    }

    public static LocaleEnum fromValue(String text) {
      for (LocaleEnum b : LocaleEnum.values()) {
        if (String.valueOf(b.value).equals(text)) {
          return b;
        }
      }
      return null;
    }

    public static class Adapter extends TypeAdapter<LocaleEnum> {
      @Override
      public void write(final JsonWriter jsonWriter, final LocaleEnum enumeration) throws IOException {
        jsonWriter.value(enumeration.getValue());
      }

      @Override
      public LocaleEnum read(final JsonReader jsonReader) throws IOException {
        String value = jsonReader.nextString();
        return LocaleEnum.fromValue(String.valueOf(value));
      }
    }
  }

  @SerializedName("locale")
  private LocaleEnum locale = null;

  @SerializedName("phone")
  private String phone = null;

  public RecurringCustomer email(String email) {
    this.email = email;
    return this;
  }

   /**
   * Customer&#39;s e-mail address
   * @return email
  **/
  @ApiModelProperty(example = "customer@example.com", value = "Customer's e-mail address")
  public String getEmail() {
    return email;
  }

  public void setEmail(String email) {
    this.email = email;
  }

  public RecurringCustomer id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Customer&#39;s ID in the merchant&#39;s system
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Customer's ID in the merchant's system")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public RecurringCustomer locale(LocaleEnum locale) {
    this.locale = locale;
    return this;
  }

   /**
   * Preferred locale for the payment page ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code). The default locale will be applied if the selected locale is not supported. Supported locales are: &#x60;ru&#x60;, &#x60;en&#x60;, &#x60;zh&#x60;, &#x60;ja&#x60;
   * @return locale
  **/
  @ApiModelProperty(value = "Preferred locale for the payment page ([ISO 639-1](https://en.wikipedia.org/wiki/ISO_639-1) language code). The default locale will be applied if the selected locale is not supported. Supported locales are: `ru`, `en`, `zh`, `ja`")
  public LocaleEnum getLocale() {
    return locale;
  }

  public void setLocale(LocaleEnum locale) {
    this.locale = locale;
  }

  public RecurringCustomer phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Customer phone number
   * @return phone
  **/
  @ApiModelProperty(example = "811111111", value = "Customer phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    RecurringCustomer recurringCustomer = (RecurringCustomer) o;
    return Objects.equals(this.email, recurringCustomer.email) &&
        Objects.equals(this.id, recurringCustomer.id) &&
        Objects.equals(this.locale, recurringCustomer.locale) &&
        Objects.equals(this.phone, recurringCustomer.phone);
  }

  @Override
  public int hashCode() {
    return Objects.hash(email, id, locale, phone);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class RecurringCustomer {\n");
    
    if (email != null) sb.append("    email: ").append(toIndentedString(email)).append("\n");
    if (id != null) sb.append("    id: ").append(toIndentedString(id)).append("\n");
    if (locale != null) sb.append("    locale: ").append(toIndentedString(locale)).append("\n");
    if (phone != null) sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

