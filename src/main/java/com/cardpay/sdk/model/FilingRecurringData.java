/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FilingRecurringData
 */

public class FilingRecurringData {
  @SerializedName("currency")
  private String currency = null;

  @SerializedName("dynamic_descriptor")
  private String dynamicDescriptor = null;

  @SerializedName("generate_token")
  private Boolean generateToken = null;

  @SerializedName("initiator")
  private String initiator = null;

  @SerializedName("note")
  private String note = null;

  public FilingRecurringData currency(String currency) {
    this.currency = currency;
    return this;
  }

   /**
   * [ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code
   * @return currency
  **/
  @ApiModelProperty(example = "USD", required = true, value = "[ISO 4217](https://en.wikipedia.org/wiki/ISO_4217) currency code")
  public String getCurrency() {
    return currency;
  }

  public void setCurrency(String currency) {
    this.currency = currency;
  }

  public FilingRecurringData dynamicDescriptor(String dynamicDescriptor) {
    this.dynamicDescriptor = dynamicDescriptor;
    return this;
  }

   /**
   * Short description of the service or product, must be enabled by CardPay manager to be used
   * @return dynamicDescriptor
  **/
  @ApiModelProperty(value = "Short description of the service or product, must be enabled by CardPay manager to be used")
  public String getDynamicDescriptor() {
    return dynamicDescriptor;
  }

  public void setDynamicDescriptor(String dynamicDescriptor) {
    this.dynamicDescriptor = dynamicDescriptor;
  }

  public FilingRecurringData generateToken(Boolean generateToken) {
    this.generateToken = generateToken;
    return this;
  }

   /**
   * If set to &#x60;true&#x60;, token will be generated and returned in the response
   * @return generateToken
  **/
  @ApiModelProperty(value = "If set to `true`, token will be generated and returned in the response")
  public Boolean isGenerateToken() {
    return generateToken;
  }

  public void setGenerateToken(Boolean generateToken) {
    this.generateToken = generateToken;
  }

  public FilingRecurringData initiator(String initiator) {
    this.initiator = initiator;
    return this;
  }

   /**
   * Can be only &#x60;cit&#x60; (cardholder initiated transaction)
   * @return initiator
  **/
  @ApiModelProperty(value = "Can be only `cit` (cardholder initiated transaction)")
  public String getInitiator() {
    return initiator;
  }

  public void setInitiator(String initiator) {
    this.initiator = initiator;
  }

  public FilingRecurringData note(String note) {
    this.note = note;
    return this;
  }

   /**
   * Note about the transaction that will not be displayed to customer
   * @return note
  **/
  @ApiModelProperty(value = "Note about the transaction that will not be displayed to customer")
  public String getNote() {
    return note;
  }

  public void setNote(String note) {
    this.note = note;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilingRecurringData filingRecurringData = (FilingRecurringData) o;
    return Objects.equals(this.currency, filingRecurringData.currency) &&
        Objects.equals(this.dynamicDescriptor, filingRecurringData.dynamicDescriptor) &&
        Objects.equals(this.generateToken, filingRecurringData.generateToken) &&
        Objects.equals(this.initiator, filingRecurringData.initiator) &&
        Objects.equals(this.note, filingRecurringData.note);
  }

  @Override
  public int hashCode() {
    return Objects.hash(currency, dynamicDescriptor, generateToken, initiator, note);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilingRecurringData {\n");
    
    if (currency != null) sb.append("    currency: ").append(toIndentedString(currency)).append("\n");
    if (dynamicDescriptor != null) sb.append("    dynamicDescriptor: ").append(toIndentedString(dynamicDescriptor)).append("\n");
    if (generateToken != null) sb.append("    generateToken: ").append(toIndentedString(generateToken)).append("\n");
    if (initiator != null) sb.append("    initiator: ").append(toIndentedString(initiator)).append("\n");
    if (note != null) sb.append("    note: ").append(toIndentedString(note)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

