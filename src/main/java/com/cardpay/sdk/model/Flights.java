/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.cardpay.sdk.model.Flight;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.util.ArrayList;
import java.util.List;

/**
 * A Flights element represents common airlines information for the whole travel like Passenger Name or Travel Agency.  Each flight element represents a separate flight. Since a flights order matters it is recommended to additionally control it by adding index attribute to each flight element. For BANKCARD payment method only. Relates to MerchantOrder
 */
@ApiModel(description = "A Flights element represents common airlines information for the whole travel like Passenger Name or Travel Agency.  Each flight element represents a separate flight. Since a flights order matters it is recommended to additionally control it by adding index attribute to each flight element. For BANKCARD payment method only. Relates to MerchantOrder")

public class Flights {
  @SerializedName("computerized_res_system")
  private String computerizedResSystem = null;

  @SerializedName("credit_reason_indicator")
  private String creditReasonIndicator = null;

  @SerializedName("departure_date")
  private String departureDate = null;

  @SerializedName("flight")
  private List<Flight> flight = null;

  @SerializedName("is_restricted")
  private Boolean isRestricted = null;

  @SerializedName("origination_code")
  private String originationCode = null;

  @SerializedName("passenger_name")
  private String passengerName = null;

  @SerializedName("ticket_change_indicator")
  private String ticketChangeIndicator = null;

  @SerializedName("travel_agency_code")
  private String travelAgencyCode = null;

  @SerializedName("travel_agency_name")
  private String travelAgencyName = null;

  public Flights computerizedResSystem(String computerizedResSystem) {
    this.computerizedResSystem = computerizedResSystem;
    return this;
  }

   /**
   * Computerized reservation system code
   * @return computerizedResSystem
  **/
  @ApiModelProperty(value = "Computerized reservation system code")
  public String getComputerizedResSystem() {
    return computerizedResSystem;
  }

  public void setComputerizedResSystem(String computerizedResSystem) {
    this.computerizedResSystem = computerizedResSystem;
  }

  public Flights creditReasonIndicator(String creditReasonIndicator) {
    this.creditReasonIndicator = creditReasonIndicator;
    return this;
  }

   /**
   * Credit reason indicator
   * @return creditReasonIndicator
  **/
  @ApiModelProperty(value = "Credit reason indicator")
  public String getCreditReasonIndicator() {
    return creditReasonIndicator;
  }

  public void setCreditReasonIndicator(String creditReasonIndicator) {
    this.creditReasonIndicator = creditReasonIndicator;
  }

  public Flights departureDate(String departureDate) {
    this.departureDate = departureDate;
    return this;
  }

   /**
   * Date of departure in format &#39;DD.MM.YYYY&#39;
   * @return departureDate
  **/
  @ApiModelProperty(value = "Date of departure in format 'DD.MM.YYYY'")
  public String getDepartureDate() {
    return departureDate;
  }

  public void setDepartureDate(String departureDate) {
    this.departureDate = departureDate;
  }

  public Flights flight(List<Flight> flight) {
    this.flight = flight;
    return this;
  }

  public Flights addFlightItem(Flight flightItem) {
    if (this.flight == null) {
      this.flight = new ArrayList<>();
    }
    this.flight.add(flightItem);
    return this;
  }

   /**
   * Information about particular flight leg
   * @return flight
  **/
  @ApiModelProperty(value = "Information about particular flight leg")
  public List<Flight> getFlight() {
    return flight;
  }

  public void setFlight(List<Flight> flight) {
    this.flight = flight;
  }

  public Flights isRestricted(Boolean isRestricted) {
    this.isRestricted = isRestricted;
    return this;
  }

   /**
   * Restricted ticket indicator
   * @return isRestricted
  **/
  @ApiModelProperty(value = "Restricted ticket indicator")
  public Boolean isIsRestricted() {
    return isRestricted;
  }

  public void setIsRestricted(Boolean isRestricted) {
    this.isRestricted = isRestricted;
  }

  public Flights originationCode(String originationCode) {
    this.originationCode = originationCode;
    return this;
  }

   /**
   * Code of airport of departure, IATA code
   * @return originationCode
  **/
  @ApiModelProperty(value = "Code of airport of departure, IATA code")
  public String getOriginationCode() {
    return originationCode;
  }

  public void setOriginationCode(String originationCode) {
    this.originationCode = originationCode;
  }

  public Flights passengerName(String passengerName) {
    this.passengerName = passengerName;
    return this;
  }

   /**
   * First and last name of a passenger
   * @return passengerName
  **/
  @ApiModelProperty(value = "First and last name of a passenger")
  public String getPassengerName() {
    return passengerName;
  }

  public void setPassengerName(String passengerName) {
    this.passengerName = passengerName;
  }

  public Flights ticketChangeIndicator(String ticketChangeIndicator) {
    this.ticketChangeIndicator = ticketChangeIndicator;
    return this;
  }

   /**
   * Ticket change indicator
   * @return ticketChangeIndicator
  **/
  @ApiModelProperty(value = "Ticket change indicator")
  public String getTicketChangeIndicator() {
    return ticketChangeIndicator;
  }

  public void setTicketChangeIndicator(String ticketChangeIndicator) {
    this.ticketChangeIndicator = ticketChangeIndicator;
  }

  public Flights travelAgencyCode(String travelAgencyCode) {
    this.travelAgencyCode = travelAgencyCode;
    return this;
  }

   /**
   * Code of travel agency
   * @return travelAgencyCode
  **/
  @ApiModelProperty(value = "Code of travel agency")
  public String getTravelAgencyCode() {
    return travelAgencyCode;
  }

  public void setTravelAgencyCode(String travelAgencyCode) {
    this.travelAgencyCode = travelAgencyCode;
  }

  public Flights travelAgencyName(String travelAgencyName) {
    this.travelAgencyName = travelAgencyName;
    return this;
  }

   /**
   * Name of travel agency
   * @return travelAgencyName
  **/
  @ApiModelProperty(value = "Name of travel agency")
  public String getTravelAgencyName() {
    return travelAgencyName;
  }

  public void setTravelAgencyName(String travelAgencyName) {
    this.travelAgencyName = travelAgencyName;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Flights flights = (Flights) o;
    return Objects.equals(this.computerizedResSystem, flights.computerizedResSystem) &&
        Objects.equals(this.creditReasonIndicator, flights.creditReasonIndicator) &&
        Objects.equals(this.departureDate, flights.departureDate) &&
        Objects.equals(this.flight, flights.flight) &&
        Objects.equals(this.isRestricted, flights.isRestricted) &&
        Objects.equals(this.originationCode, flights.originationCode) &&
        Objects.equals(this.passengerName, flights.passengerName) &&
        Objects.equals(this.ticketChangeIndicator, flights.ticketChangeIndicator) &&
        Objects.equals(this.travelAgencyCode, flights.travelAgencyCode) &&
        Objects.equals(this.travelAgencyName, flights.travelAgencyName);
  }

  @Override
  public int hashCode() {
    return Objects.hash(computerizedResSystem, creditReasonIndicator, departureDate, flight, isRestricted, originationCode, passengerName, ticketChangeIndicator, travelAgencyCode, travelAgencyName);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Flights {\n");
    
    if (computerizedResSystem != null) sb.append("    computerizedResSystem: ").append(toIndentedString(computerizedResSystem)).append("\n");
    if (creditReasonIndicator != null) sb.append("    creditReasonIndicator: ").append(toIndentedString(creditReasonIndicator)).append("\n");
    if (departureDate != null) sb.append("    departureDate: ").append(toIndentedString(departureDate)).append("\n");
    if (flight != null) sb.append("    flight: ").append(toIndentedString(flight)).append("\n");
    if (isRestricted != null) sb.append("    isRestricted: ").append(toIndentedString(isRestricted)).append("\n");
    if (originationCode != null) sb.append("    originationCode: ").append(toIndentedString(originationCode)).append("\n");
    if (passengerName != null) sb.append("    passengerName: ").append(toIndentedString(passengerName)).append("\n");
    if (ticketChangeIndicator != null) sb.append("    ticketChangeIndicator: ").append(toIndentedString(ticketChangeIndicator)).append("\n");
    if (travelAgencyCode != null) sb.append("    travelAgencyCode: ").append(toIndentedString(travelAgencyCode)).append("\n");
    if (travelAgencyName != null) sb.append("    travelAgencyName: ").append(toIndentedString(travelAgencyName)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

