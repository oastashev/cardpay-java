/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * ShippingAddress
 */

public class ShippingAddress {
  @SerializedName("city")
  private String city = null;

  @SerializedName("country")
  private String country = null;

  @SerializedName("phone")
  private String phone = null;

  @SerializedName("state")
  private String state = null;

  @SerializedName("street")
  private String street = null;

  @SerializedName("zip")
  private String zip = null;

  public ShippingAddress city(String city) {
    this.city = city;
    return this;
  }

   /**
   * Name of city. May include whitespaces, hyphens, apostrophes, commas and dots
   * @return city
  **/
  @ApiModelProperty(example = "New York", value = "Name of city. May include whitespaces, hyphens, apostrophes, commas and dots")
  public String getCity() {
    return city;
  }

  public void setCity(String city) {
    this.city = city;
  }

  public ShippingAddress country(String country) {
    this.country = country;
    return this;
  }

   /**
   * [ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) code of country: 2 or 3 latin letters or numeric code
   * @return country
  **/
  @ApiModelProperty(example = "USA", required = true, value = "[ISO 3166-1](https://en.wikipedia.org/wiki/ISO_3166-1) code of country: 2 or 3 latin letters or numeric code")
  public String getCountry() {
    return country;
  }

  public void setCountry(String country) {
    this.country = country;
  }

  public ShippingAddress phone(String phone) {
    this.phone = phone;
    return this;
  }

   /**
   * Valid customer phone number
   * @return phone
  **/
  @ApiModelProperty(example = "+1 (212) 210-2100", value = "Valid customer phone number")
  public String getPhone() {
    return phone;
  }

  public void setPhone(String phone) {
    this.phone = phone;
  }

  public ShippingAddress state(String state) {
    this.state = state;
    return this;
  }

   /**
   * State or province. May include whitespaces, hyphens, apostrophes, commas and dots
   * @return state
  **/
  @ApiModelProperty(example = "NY", value = "State or province. May include whitespaces, hyphens, apostrophes, commas and dots")
  public String getState() {
    return state;
  }

  public void setState(String state) {
    this.state = state;
  }

  public ShippingAddress street(String street) {
    this.street = street;
    return this;
  }

   /**
   * Street address. May include whitespaces, hyphens, apostrophes, commas, quotes, dots, slashes and semicolons
   * @return street
  **/
  @ApiModelProperty(example = "450 W. 33 Street", value = "Street address. May include whitespaces, hyphens, apostrophes, commas, quotes, dots, slashes and semicolons")
  public String getStreet() {
    return street;
  }

  public void setStreet(String street) {
    this.street = street;
  }

  public ShippingAddress zip(String zip) {
    this.zip = zip;
    return this;
  }

   /**
   * Postal code
   * @return zip
  **/
  @ApiModelProperty(example = "02108", value = "Postal code")
  public String getZip() {
    return zip;
  }

  public void setZip(String zip) {
    this.zip = zip;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    ShippingAddress shippingAddress = (ShippingAddress) o;
    return Objects.equals(this.city, shippingAddress.city) &&
        Objects.equals(this.country, shippingAddress.country) &&
        Objects.equals(this.phone, shippingAddress.phone) &&
        Objects.equals(this.state, shippingAddress.state) &&
        Objects.equals(this.street, shippingAddress.street) &&
        Objects.equals(this.zip, shippingAddress.zip);
  }

  @Override
  public int hashCode() {
    return Objects.hash(city, country, phone, state, street, zip);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class ShippingAddress {\n");
    
    if (city != null) sb.append("    city: ").append(toIndentedString(city)).append("\n");
    if (country != null) sb.append("    country: ").append(toIndentedString(country)).append("\n");
    if (phone != null) sb.append("    phone: ").append(toIndentedString(phone)).append("\n");
    if (state != null) sb.append("    state: ").append(toIndentedString(state)).append("\n");
    if (street != null) sb.append("    street: ").append(toIndentedString(street)).append("\n");
    if (zip != null) sb.append("    zip: ").append(toIndentedString(zip)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

