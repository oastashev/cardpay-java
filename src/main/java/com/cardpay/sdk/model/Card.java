/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * Shouldn&#39;t be used in Payment Page mode. For BANKCARD payment method only. Relates to PaymentRequest
 */
@ApiModel(description = "Shouldn't be used in Payment Page mode. For BANKCARD payment method only. Relates to PaymentRequest")

public class Card {
  @SerializedName("expiration")
  private String expiration = null;

  @SerializedName("holder")
  private String holder = null;

  @SerializedName("pan")
  private String pan = null;

  @SerializedName("security_code")
  private String securityCode = null;

  public Card expiration(String expiration) {
    this.expiration = expiration;
    return this;
  }

   /**
   * Customer&#39;s card expiration date. Format: mm/yyyy
   * @return expiration
  **/
  @ApiModelProperty(example = "11/2022", required = true, value = "Customer's card expiration date. Format: mm/yyyy")
  public String getExpiration() {
    return expiration;
  }

  public void setExpiration(String expiration) {
    this.expiration = expiration;
  }

  public Card holder(String holder) {
    this.holder = holder;
    return this;
  }

   /**
   * Customer&#39;s cardholder name. Any valid cardholder name
   * @return holder
  **/
  @ApiModelProperty(example = "John Smith", required = true, value = "Customer's cardholder name. Any valid cardholder name")
  public String getHolder() {
    return holder;
  }

  public void setHolder(String holder) {
    this.holder = holder;
  }

  public Card pan(String pan) {
    this.pan = pan;
    return this;
  }

   /**
   * Customer&#39;s card number (PAN). Any valid card number, may contain spaces
   * @return pan
  **/
  @ApiModelProperty(example = "4000000000000002", required = true, value = "Customer's card number (PAN). Any valid card number, may contain spaces")
  public String getPan() {
    return pan;
  }

  public void setPan(String pan) {
    this.pan = pan;
  }

  public Card securityCode(String securityCode) {
    this.securityCode = securityCode;
    return this;
  }

   /**
   * Customer&#39;s CVV2 / CVC2 / CAV2
   * @return securityCode
  **/
  @ApiModelProperty(example = "555", value = "Customer's CVV2 / CVC2 / CAV2")
  public String getSecurityCode() {
    return securityCode;
  }

  public void setSecurityCode(String securityCode) {
    this.securityCode = securityCode;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Card card = (Card) o;
    return Objects.equals(this.expiration, card.expiration) &&
        Objects.equals(this.holder, card.holder) &&
        Objects.equals(this.pan, card.pan) &&
        Objects.equals(this.securityCode, card.securityCode);
  }

  @Override
  public int hashCode() {
    return Objects.hash(expiration, holder, pan, securityCode);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Card {\n");
    
    if (expiration != null) sb.append("    expiration: ").append(toIndentedString(expiration)).append("\n");
    if (holder != null) sb.append("    holder: ").append(toIndentedString(holder)).append("\n");
    if (pan != null) sb.append("    pan: ").append(toIndentedString(pan)).append("\n");
    if (securityCode != null) sb.append("    securityCode: ").append(toIndentedString(securityCode)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

