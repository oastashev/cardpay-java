/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.cardpay.sdk.model.ShippingAddress;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;

/**
 * FilingMerchantOrder
 */

public class FilingMerchantOrder {
  @SerializedName("description")
  private String description = null;

  @SerializedName("id")
  private String id = null;

  @SerializedName("shipping_address")
  private ShippingAddress shippingAddress = null;

  public FilingMerchantOrder description(String description) {
    this.description = description;
    return this;
  }

   /**
   * Description of product/service being sold
   * @return description
  **/
  @ApiModelProperty(example = "Example order", required = true, value = "Description of product/service being sold")
  public String getDescription() {
    return description;
  }

  public void setDescription(String description) {
    this.description = description;
  }

  public FilingMerchantOrder id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Merchant&#39;s ID of the order
   * @return id
  **/
  @ApiModelProperty(required = true, value = "Merchant's ID of the order")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public FilingMerchantOrder shippingAddress(ShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
    return this;
  }

   /**
   * Shipping address is the address where the order will be delivered.  It is used in Anti-fraud System and also can be seen in Merchant Account (Transactions).  But this address field may be omitted and all the subfields inside it may be omitted too except Country.
   * @return shippingAddress
  **/
  @ApiModelProperty(value = "Shipping address is the address where the order will be delivered.  It is used in Anti-fraud System and also can be seen in Merchant Account (Transactions).  But this address field may be omitted and all the subfields inside it may be omitted too except Country.")
  public ShippingAddress getShippingAddress() {
    return shippingAddress;
  }

  public void setShippingAddress(ShippingAddress shippingAddress) {
    this.shippingAddress = shippingAddress;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    FilingMerchantOrder filingMerchantOrder = (FilingMerchantOrder) o;
    return Objects.equals(this.description, filingMerchantOrder.description) &&
        Objects.equals(this.id, filingMerchantOrder.id) &&
        Objects.equals(this.shippingAddress, filingMerchantOrder.shippingAddress);
  }

  @Override
  public int hashCode() {
    return Objects.hash(description, id, shippingAddress);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class FilingMerchantOrder {\n");
    
    if (description != null) sb.append("    description: ").append(toIndentedString(description)).append("\n");
    if (id != null) sb.append("    id: ").append(toIndentedString(id)).append("\n");
    if (shippingAddress != null) sb.append("    shippingAddress: ").append(toIndentedString(shippingAddress)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

