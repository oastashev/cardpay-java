/*
 * CardPay REST API
 * The CardPay API uses HTTP verbs and a RESTful endpoint structure. Request and response payloads are formatted as JSON.
 *
 * OpenAPI spec version: 3.0
 * Contact: support@cardpay.com
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */


package com.cardpay.sdk.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import io.swagger.annotations.ApiModel;
import io.swagger.annotations.ApiModelProperty;
import java.io.IOException;
import java.time.OffsetDateTime;

/**
 * Request
 */

public class Request {
  @SerializedName("id")
  private String id = null;

  @SerializedName("time")
  private OffsetDateTime time = null;

  public Request id(String id) {
    this.id = id;
    return this;
  }

   /**
   * Request ID, should be unique for time period of 30 minutes
   * @return id
  **/
  @ApiModelProperty(example = "1", required = true, value = "Request ID, should be unique for time period of 30 minutes")
  public String getId() {
    return id;
  }

  public void setId(String id) {
    this.id = id;
  }

  public Request time(OffsetDateTime time) {
    this.time = time;
    return this;
  }

   /**
   * Request date and time up to milliseconds in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, milliseconds is optional part. Should be server time of request (UTC time). Format: yyyy-MM-dd&#39;T&#39;HH:mm:ss.SSS&#39;Z&#39;
   * @return time
  **/
  @ApiModelProperty(example = "2018-08-28T09:09:49Z", required = true, value = "Request date and time up to milliseconds in [ISO 8601](https://en.wikipedia.org/wiki/ISO_8601) format, milliseconds is optional part. Should be server time of request (UTC time). Format: yyyy-MM-dd'T'HH:mm:ss.SSS'Z'")
  public OffsetDateTime getTime() {
    return time;
  }

  public void setTime(OffsetDateTime time) {
    this.time = time;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    Request request = (Request) o;
    return Objects.equals(this.id, request.id) &&
        Objects.equals(this.time, request.time);
  }

  @Override
  public int hashCode() {
    return Objects.hash(id, time);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class Request {\n");
    
    if (id != null) sb.append("    id: ").append(toIndentedString(id)).append("\n");
    if (time != null) sb.append("    time: ").append(toIndentedString(time)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}

